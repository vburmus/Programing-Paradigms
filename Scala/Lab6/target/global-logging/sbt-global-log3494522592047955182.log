[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\burmu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\burmu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 1.8.0_321)
[debug]       Load.loadUnit: plugins took 80.4985ms
[debug]       Load.loadUnit: defsScala took 0.1971ms
[debug] [Loading] Scanning directory C:\Users\burmu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\burmu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.9472 ms
[debug]           Load.resolveProject(global-plugins) took 33.4072ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\burmu\.sbt\1.0\plugins, plugins: List(<none>))) took 132.3018ms
[debug] [Loading] Done in C:\Users\burmu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 179.749ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1646ms
[debug]     Load.loadUnit(file:/C:/Users/burmu/.sbt/1.0/plugins/, ...) took 266.2358ms
[debug]   Load.apply: load took 408.6499ms
[debug]   Load.apply: resolveProjects took 6.2416ms
[debug]   Load.apply: finalTransforms took 46.6133ms
[debug]   Load.apply: config.delegates took 7.4157ms
[debug]   Load.apply: Def.make(settings)... took 324.6508ms
[debug]   Load.apply: structureIndex took 100.9185ms
[debug]   Load.apply: mkStreams took 1.9955ms
[info] loading global plugins from C:\Users\burmu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3441.3614ms
[debug]           Load.loadUnit: plugins took 17.0048ms
[debug]           Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory D:\Paradygmaty\Scala\Lab6\project
[debug]             Load.loadUnit: mkEval took 7.0453ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab6\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9964 ms
[info] loading settings for project lab6-build from idea.sbt ...
[debug]               Load.resolveProject(lab6-build) took 1.8541ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab6-build, base: D:\Paradygmaty\Scala\Lab6\project, plugins: List(<none>))) took 3.1636ms
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab6\project, returning: (lab6-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1781.0096ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6387ms
[debug]         Load.loadUnit(file:/D:/Paradygmaty/Scala/Lab6/project/, ...) took 1802.3907ms
[debug]       Load.apply: load took 1803.1599ms
[debug]       Load.apply: resolveProjects took 0.098ms
[debug]       Load.apply: finalTransforms took 5.4587ms
[debug]       Load.apply: config.delegates took 0.3281ms
[debug]       Load.apply: Def.make(settings)... took 75.0032ms
[debug]       Load.apply: structureIndex took 27.1725ms
[debug]       Load.apply: mkStreams took 0.0041ms
[info] loading project definition from D:\Paradygmaty\Scala\Lab6\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3588.8988ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory D:\Paradygmaty\Scala\Lab6
[debug]       Load.loadUnit: mkEval took 0.1826ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4951 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.3055ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Paradygmaty\Scala\Lab6, plugins: List(<none>))) took 26.6792ms
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab6, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 787.2908ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.6284ms
[debug]   Load.loadUnit(file:/D:/Paradygmaty/Scala/Lab6/, ...) took 4383.7652ms
[debug] Load.apply: load took 4386.3779ms
[debug] Load.apply: resolveProjects took 0.1338ms
[debug] Load.apply: finalTransforms took 21.239ms
[debug] Load.apply: config.delegates took 0.1984ms
[debug] Load.apply: Def.make(settings)... took 55.2997ms
[debug] Load.apply: structureIndex took 13.1051ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to Lab6 (in build file:/D:/Paradygmaty/Scala/Lab6/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51870 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51870, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Lab6 (in build file:/D:/Paradygmaty/Scala/Lab6/)
[debug] > Exec(idea-shell, None, None)
