[debug] > Exec(;project {file:/D:/Paradygmaty/Scala/Lab9/}root; reload, None, None)
[debug] > Exec(project {file:/D:/Paradygmaty/Scala/Lab9/}root, None, None)
[info] set current project to Lab9 (in build file:/D:/Paradygmaty/Scala/Lab9/)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 19.855ms
[debug]       Load.loadUnit: defsScala took 0.002599ms
[debug] [Loading] Scanning directory C:\Users\burmu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\burmu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.003199 ms
[debug]           Load.resolveProject(global-plugins) took 0.602299ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\burmu\.sbt\1.0\plugins, plugins: List(<none>))) took 1.872299ms
[debug] [Loading] Done in C:\Users\burmu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3.682699ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0153ms
[debug]     Load.loadUnit(file:/C:/Users/burmu/.sbt/1.0/plugins/, ...) took 24.081899ms
[debug]   Load.apply: load took 24.7339ms
[debug]   Load.apply: resolveProjects took 0.0573ms
[debug]   Load.apply: finalTransforms took 2.7775ms
[debug]   Load.apply: config.delegates took 0.168ms
[debug]   Load.apply: Def.make(settings)... took 41.191001ms
[debug]   Load.apply: structureIndex took 8.7522ms
[debug]   Load.apply: mkStreams took 0.001799ms
[info] loading global plugins from C:\Users\burmu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 167.087299ms
[debug]           Load.loadUnit: plugins took 12.7245ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory D:\Paradygmaty\Scala\Lab9\project
[debug]             Load.loadUnit: mkEval took 0.2101ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab9\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.797799 ms
[info] loading settings for project lab9-build from idea.sbt ...
[debug]               Load.resolveProject(lab9-build) took 1.132ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab9-build, base: D:\Paradygmaty\Scala\Lab9\project, plugins: List(<none>))) took 2.210401ms
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab9\project, returning: (lab9-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 14.6395ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.607801ms
[debug]         Load.loadUnit(file:/D:/Paradygmaty/Scala/Lab9/project/, ...) took 30.499901ms
[debug]       Load.apply: load took 31.0961ms
[debug]       Load.apply: resolveProjects took 0.0742ms
[debug]       Load.apply: finalTransforms took 2.944601ms
[debug]       Load.apply: config.delegates took 0.2128ms
[debug]       Load.apply: Def.make(settings)... took 32.957001ms
[debug]       Load.apply: structureIndex took 12.0998ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from D:\Paradygmaty\Scala\Lab9\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 175.9911ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory D:\Paradygmaty\Scala\Lab9
[debug]       Load.loadUnit: mkEval took 0.204501ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.133099 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.612299ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Paradygmaty\Scala\Lab9, plugins: List(<none>))) took 25.2511ms
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab9, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 53.145601ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.895601ms
[debug]   Load.loadUnit(file:/D:/Paradygmaty/Scala/Lab9/, ...) took 239.766701ms
[debug] Load.apply: load took 241.120599ms
[debug] Load.apply: resolveProjects took 0.1117ms
[debug] Load.apply: finalTransforms took 10.896801ms
[debug] Load.apply: config.delegates took 0.265399ms
[debug] Load.apply: Def.make(settings)... took 39.130501ms
[debug] Load.apply: structureIndex took 13.1722ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to Lab9 (in build file:/D:/Paradygmaty/Scala/Lab9/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
