[debug] > Exec(;project {file:/D:/Paradygmaty/Scala/Lab9/}root; reload, None, None)
[debug] > Exec(project {file:/D:/Paradygmaty/Scala/Lab9/}root, None, None)
[info] set current project to Lab9 (in build file:/D:/Paradygmaty/Scala/Lab9/)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 12.7891ms
[debug]       Load.loadUnit: defsScala took 0.002699ms
[debug] [Loading] Scanning directory C:\Users\burmu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\burmu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8471 ms
[debug]           Load.resolveProject(global-plugins) took 0.8818ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\burmu\.sbt\1.0\plugins, plugins: List(<none>))) took 1.976801ms
[debug] [Loading] Done in C:\Users\burmu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 2.8108ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0074ms
[debug]     Load.loadUnit(file:/C:/Users/burmu/.sbt/1.0/plugins/, ...) took 16.2739ms
[debug]   Load.apply: load took 17.0893ms
[debug]   Load.apply: resolveProjects took 0.072299ms
[debug]   Load.apply: finalTransforms took 4.5423ms
[debug]   Load.apply: config.delegates took 0.289601ms
[debug]   Load.apply: Def.make(settings)... took 36.7406ms
[debug]   Load.apply: structureIndex took 20.224999ms
[debug]   Load.apply: mkStreams took 0.0037ms
[info] loading global plugins from C:\Users\burmu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 257.2991ms
[debug]           Load.loadUnit: plugins took 15.4586ms
[debug]           Load.loadUnit: defsScala took 0.002199ms
[debug] [Loading] Scanning directory D:\Paradygmaty\Scala\Lab9\project
[debug]             Load.loadUnit: mkEval took 0.188ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab9\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7776 ms
[info] loading settings for project lab9-build from idea.sbt ...
[debug]               Load.resolveProject(lab9-build) took 1.586599ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab9-build, base: D:\Paradygmaty\Scala\Lab9\project, plugins: List(<none>))) took 2.7203ms
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab9\project, returning: (lab9-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 15.4344ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.6501ms
[debug]         Load.loadUnit(file:/D:/Paradygmaty/Scala/Lab9/project/, ...) took 34.0966ms
[debug]       Load.apply: load took 34.708799ms
[debug]       Load.apply: resolveProjects took 0.0687ms
[debug]       Load.apply: finalTransforms took 5.8775ms
[debug]       Load.apply: config.delegates took 0.8453ms
[debug]       Load.apply: Def.make(settings)... took 34.005699ms
[debug]       Load.apply: structureIndex took 12.8427ms
[debug]       Load.apply: mkStreams took 0.001901ms
[info] loading project definition from D:\Paradygmaty\Scala\Lab9\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 181.348ms
[debug]     Load.loadUnit: defsScala took 0.001999ms
[debug] [Loading] Scanning directory D:\Paradygmaty\Scala\Lab9
[debug]       Load.loadUnit: mkEval took 0.166001ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1433 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 16.4735ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Paradygmaty\Scala\Lab9, plugins: List(<none>))) took 17.9392ms
[debug] [Loading] Done in D:\Paradygmaty\Scala\Lab9, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 41.640399ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.3751ms
[debug]   Load.loadUnit(file:/D:/Paradygmaty/Scala/Lab9/, ...) took 232.8999ms
[debug] Load.apply: load took 233.668499ms
[debug] Load.apply: resolveProjects took 0.070401ms
[debug] Load.apply: finalTransforms took 11.5126ms
[debug] Load.apply: config.delegates took 0.2839ms
[debug] Load.apply: Def.make(settings)... took 38.7703ms
[debug] Load.apply: structureIndex took 15.929101ms
[debug] Load.apply: mkStreams took 0.0033ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to Lab9 (in build file:/D:/Paradygmaty/Scala/Lab9/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
